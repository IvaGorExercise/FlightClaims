// <auto-generated />
using System;
using Claims.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Claims.API.Migrations
{
    [DbContext(typeof(ClaimContext))]
    [Migration("20200216132200_ClaimDBInit001")]
    partial class ClaimDBInit001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Claims.API.Models.Claim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ClaimAmmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ClaimCaseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterruptionConsequence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterruptionReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsProcessed")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NewFlightDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewFlightNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OriginalFlightDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OriginalFlightNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Claim");
                });

            modelBuilder.Entity("Claims.API.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Claims.API.Models.Data.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmoutCancellation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmoutPerDayDellay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ClientNameId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientNameId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Claims.API.Models.InterruptionConsequence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Consequence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsequenceId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InterruptionConsequence");
                });

            modelBuilder.Entity("Claims.API.Models.InterruptionResaon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InterruptionResaon");
                });

            modelBuilder.Entity("Claims.API.Models.Data.Product", b =>
                {
                    b.HasOne("Claims.API.Models.Client", "ClientName")
                        .WithMany()
                        .HasForeignKey("ClientNameId");
                });
#pragma warning restore 612, 618
        }
    }
}
